@use "sass:map";
@use "sass:meta";
@use "../variable-sass/" as var;

@mixin mq($point, $min: false) {
	@if (meta.type-of($point) == list) {
		$bp1: "";
		$bp2: "";

		@if (map.get(var.$breakpoints, nth($point, 1))) {
			$bp1: map.get(var.$breakpoints, nth($point, 1)) + 1;
		} @else {
			$bp1: nth($point, 1);
		}

		@if (map.get(var.$breakpoints, nth($point, 2))) {
			$bp2: map.get(var.$breakpoints, nth($point, 2));
		} @else {
			$bp2: nth($point, 2);
		}

		@media (width >= $bp1) and (width <= $bp2) {
			@content;
		}
	} @else if ($min) {
		@if (map.get(var.$breakpoints, $point)) {
			@media (width >= (map.get(var.$breakpoints, $point)+1)) {
				@content;
			}
		} @else {
			@media (width >= $point) {
				@content;
			}
		}
	} @else {
		@if (map.get(var.$breakpoints, $point)) {
			@media (width <= map.get(var.$breakpoints, $point)) {
				@content;
			}
		} @else {
			@media (width <= $point) {
				@content;
			}
		}
	}
}

@mixin cq($point, $min: false) {
	@if (meta.type-of($point) == list) {
		$bp1: "";
		$bp2: "";

		@if (map.get(var.$breakpoints, nth($point, 1))) {
			$bp1: map.get(var.$breakpoints, nth($point, 1)) + 1;
		} @else {
			$bp1: nth($point, 1);
		}

		@if (map.get(var.$breakpoints, nth($point, 2))) {
			$bp2: map.get(var.$breakpoints, nth($point, 2));
		} @else {
			$bp2: nth($point, 2);
		}

		@container (width >= #{$bp1}) and (width <= #{$bp2}) {
			@content;
		}
	} @else if ($min) {
		@if (map.get(var.$breakpoints, $point)) {
			$bp: map.get(var.$breakpoints, $point) + 1;
			@container (width >= #{$bp}) {
				@content;
			}
		} @else {
			@container (width >= #{$point}) {
				@content;
			}
		}
	} @else {
		@if (map.get(var.$breakpoints, $point)) {
			$bp: map.get(var.$breakpoints, $point);
			@container (width <= #{$bp}) {
				@content;
			}
		} @else {
			@container (width <= #{$point}) {
				@content;
			}
		}
	}
}
